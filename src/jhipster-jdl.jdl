application {
    config {
        baseName flashJobs,
        applicationType monolith,
        packageName com.infinity,
        authenticationType jwt,
        prodDatabaseType postgresql,
        clientFramework angular
    }
    entities *
}


entity Application {

    date ZonedDateTime
    status Status

}

entity Candidate {


    userId Long
    name String required
    phone String required
    valid Boolean
    validUntil ZonedDateTime

}

enum Status {

    ACCEPTED
    REJECTED
    PENDING
}

enum TimeStatus {

    MORNING
    AFTERNOON
    NIGHT
}

entity Country {


    name String required unique
    code String required minlength(2) maxlength(3) unique
}

entity Address {

    street String required
    position String
    city String required
    zipcode String required

}

entity CandidatePreference {

    distance Integer  min(0) max(100)

}

entity CandidateDisponibility {

    dipoTime ZonedDateTime required
    dispoPeriod TimeStatus required
}

entity Compagny {

    name String required
    description String required
    phone String required
    logoUrl String

}

entity Cv {

    name String required
    updateDate ZonedDateTime
    format String
}

entity Job {

    name String required
    valid Boolean required
    validUntil ZonedDateTime required
    salary Float required
    prime BigDecimal

}

entity JobCat {
    name String required
    description String required
}

entity JobSubCat {
    name String required
    description String required
}

entity Contact {
    name String required
    phone String required
    email String  required
}



relationship OneToOne {
    Job to Address
    Job to Contact
}

relationship OneToMany {
    JobCat to JobSubCat
    JobSubCat to Job
    CandidatePreference{JobSubCat(name )} to JobSubCat
}

relationship OneToMany {
    Candidate{Job(name)} to Job
}


relationship OneToMany {
    Candidate{Application} to Application
}

relationship OneToOne {
    Application{Job(name)} to Job
}


relationship OneToMany {
    Compagny{Job(name)} to Job
    Candidate{CandidateDisponibility} to CandidateDisponibility,
}

relationship OneToOne {
    Compagny to Address
}

relationship OneToOne {
    Address to Country
}

relationship OneToOne {
    Candidate to CandidatePreference,
    Candidate{Cv(name)} to Cv

}



service * with serviceClass
filter Candidate
filter Job
use  mapstruct, serviceImpl, infinite-scroll for *

